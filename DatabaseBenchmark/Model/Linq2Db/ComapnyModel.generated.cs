//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DatabaseBenchmark.Model.Linq2Db
{
	/// <summary>
	/// Database       : Company
	/// Data Source    : .
	/// Server Version : 14.00.2014
	/// </summary>
	public partial class CompanyDB : LinqToDB.Data.DataConnection
	{
		public ITable<Department>   Departments   { get { return this.GetTable<Department>(); } }
		public ITable<Dependent>    Dependents    { get { return this.GetTable<Dependent>(); } }
		public ITable<DeptLocation> DeptLocations { get { return this.GetTable<DeptLocation>(); } }
		public ITable<Employee>     Employees     { get { return this.GetTable<Employee>(); } }
		public ITable<Project>      Projects      { get { return this.GetTable<Project>(); } }
		public ITable<WorksOn>      WorksOns      { get { return this.GetTable<WorksOn>(); } }

		public CompanyDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public CompanyDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="Department")]
	public partial class Department
	{
		[Column,        Nullable] public string    DName        { get; set; } // varchar(50)
		[PrimaryKey, NotNull    ] public int       DNumber      { get; set; } // int
		[Column,        Nullable] public decimal?  MgrSSN       { get; set; } // numeric(9, 0)
		[Column,        Nullable] public DateTime? MgrStartDate { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_Dept_Locations_Department_BackReference
		/// </summary>
		[Association(ThisKey="DNumber", OtherKey="DNUmber", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DeptLocation> DeptLocations { get; set; }

		/// <summary>
		/// FK_Department_Employee
		/// </summary>
		[Association(ThisKey="MgrSSN", OtherKey="SSN", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Department_Employee", BackReferenceName="FkDepartmentEmployeeBackReferences")]
		public Employee Employee { get; set; }

		/// <summary>
		/// FK_Employee_Department_BackReference
		/// </summary>
		[Association(ThisKey="DNumber", OtherKey="Dno", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Employee> FkEmployeeDepartmentBackReferences { get; set; }

		/// <summary>
		/// FK_Project_Department_BackReference
		/// </summary>
		[Association(ThisKey="DNumber", OtherKey="DNum", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Project> Projects { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Dependent")]
	public partial class Dependent
	{
		[Column(),                 PrimaryKey(1), NotNull] public decimal   Essn          { get; set; } // numeric(9, 0)
		[Column("Dependent_Name"), PrimaryKey(2), NotNull] public string    DependentName { get; set; } // varchar(50)
		[Column(),                    Nullable           ] public char?     Sex           { get; set; } // nchar(1)
		[Column(),                    Nullable           ] public DateTime? BDate         { get; set; } // datetime
		[Column(),                    Nullable           ] public string    Relationship  { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_Dependent_Employee
		/// </summary>
		[Association(ThisKey="Essn", OtherKey="SSN", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Dependent_Employee", BackReferenceName="Dependents")]
		public Employee Employee { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Dept_Locations")]
	public partial class DeptLocation
	{
		[PrimaryKey(1), NotNull] public int    DNUmber   { get; set; } // int
		[PrimaryKey(2), NotNull] public string DLocation { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_Dept_Locations_Department
		/// </summary>
		[Association(ThisKey="DNUmber", OtherKey="DNumber", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Dept_Locations_Department", BackReferenceName="DeptLocations")]
		public Department DeptLocationsDepartment { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Employee")]
	public partial class Employee
	{
		[Column,        Nullable] public string    FName    { get; set; } // varchar(50)
		[Column,        Nullable] public char?     Minit    { get; set; } // char(1)
		[Column,        Nullable] public string    LName    { get; set; } // varchar(50)
		[PrimaryKey, NotNull    ] public decimal   SSN      { get; set; } // numeric(9, 0)
		[Column,        Nullable] public DateTime? BDate    { get; set; } // datetime
		[Column,        Nullable] public string    Address  { get; set; } // varchar(50)
		[Column,        Nullable] public char?     Sex      { get; set; } // char(1)
		[Column,        Nullable] public decimal?  Salary   { get; set; } // numeric(10, 2)
		[Column,        Nullable] public decimal?  SuperSSN { get; set; } // numeric(9, 0)
		[Column,        Nullable] public int?      Dno      { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Employee_Department
		/// </summary>
		[Association(ThisKey="Dno", OtherKey="DNumber", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Employee_Department", BackReferenceName="FkEmployeeDepartmentBackReferences")]
		public Department Department { get; set; }

		/// <summary>
		/// FK_Dependent_Employee_BackReference
		/// </summary>
		[Association(ThisKey="SSN", OtherKey="Essn", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Dependent> Dependents { get; set; }

		/// <summary>
		/// FK_Department_Employee_BackReference
		/// </summary>
		[Association(ThisKey="SSN", OtherKey="MgrSSN", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Department> FkDepartmentEmployeeBackReferences { get; set; }

		/// <summary>
		/// FK_Employee_Employee
		/// </summary>
		[Association(ThisKey="SuperSSN", OtherKey="SSN", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Employee_Employee", BackReferenceName="FkEmployeeEmployeeBackReferences")]
		public Employee FkEmployeeEmployee { get; set; }

		/// <summary>
		/// FK_Employee_Employee_BackReference
		/// </summary>
		[Association(ThisKey="SSN", OtherKey="SuperSSN", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Employee> FkEmployeeEmployeeBackReferences { get; set; }

		/// <summary>
		/// FK_Works_on_Employee_BackReference
		/// </summary>
		[Association(ThisKey="SSN", OtherKey="Essn", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WorksOn> Worksons { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Project")]
	public partial class Project
	{
		[Column,        Nullable] public string PName     { get; set; } // varchar(50)
		[PrimaryKey, NotNull    ] public int    PNumber   { get; set; } // int
		[Column,        Nullable] public string PLocation { get; set; } // varchar(50)
		[Column,        Nullable] public int?   DNum      { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Project_Department
		/// </summary>
		[Association(ThisKey="DNum", OtherKey="DNumber", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Project_Department", BackReferenceName="Projects")]
		public Department Department { get; set; }

		/// <summary>
		/// FK_Works_on_Project_BackReference
		/// </summary>
		[Association(ThisKey="PNumber", OtherKey="Pno", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<WorksOn> Worksons { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Works_on")]
	public partial class WorksOn
	{
		[PrimaryKey(1), NotNull    ] public decimal Essn  { get; set; } // numeric(9, 0)
		[PrimaryKey(2), NotNull    ] public int     Pno   { get; set; } // int
		[Column,           Nullable] public double? Hours { get; set; } // float

		#region Associations

		/// <summary>
		/// FK_Works_on_Employee
		/// </summary>
		[Association(ThisKey="Essn", OtherKey="SSN", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Works_on_Employee", BackReferenceName="Worksons")]
		public Employee WorksonEmployee { get; set; }

		/// <summary>
		/// FK_Works_on_Project
		/// </summary>
		[Association(ThisKey="Pno", OtherKey="PNumber", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Works_on_Project", BackReferenceName="Worksons")]
		public Project WorksonProject { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Department Find(this ITable<Department> table, int DNumber)
		{
			return table.FirstOrDefault(t =>
				t.DNumber == DNumber);
		}

		public static Dependent Find(this ITable<Dependent> table, decimal Essn, string DependentName)
		{
			return table.FirstOrDefault(t =>
				t.Essn          == Essn &&
				t.DependentName == DependentName);
		}

		public static DeptLocation Find(this ITable<DeptLocation> table, int DNUmber, string DLocation)
		{
			return table.FirstOrDefault(t =>
				t.DNUmber   == DNUmber &&
				t.DLocation == DLocation);
		}

		public static Employee Find(this ITable<Employee> table, decimal SSN)
		{
			return table.FirstOrDefault(t =>
				t.SSN == SSN);
		}

		public static Project Find(this ITable<Project> table, int PNumber)
		{
			return table.FirstOrDefault(t =>
				t.PNumber == PNumber);
		}

		public static WorksOn Find(this ITable<WorksOn> table, decimal Essn, int Pno)
		{
			return table.FirstOrDefault(t =>
				t.Essn == Essn &&
				t.Pno  == Pno);
		}
	}
}

#pragma warning restore 1591
